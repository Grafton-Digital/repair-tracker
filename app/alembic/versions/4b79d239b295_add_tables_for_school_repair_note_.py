"""Add tables for School, Repair, Note, Device, Collection based on new model files

Revision ID: 4b79d239b295
Revises: 6dc106b4f361
Create Date: 2025-07-25 18:09:47.426584

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '4b79d239b295'
down_revision: Union[str, Sequence[str], None] = '6dc106b4f361'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collections',
    sa.Column('collection_number', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('origin', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('destination', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('devices',
    sa.Column('manufacturer', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schools',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('contact_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repairs',
    sa.Column('status', sa.Enum('OPEN', 'PENDING', 'CLOSED', name='repairstatus'), server_default='1', nullable=False),
    sa.Column('external_ticket_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('creator_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('date_raised', sa.Date(), nullable=False),
    sa.Column('date_closed', sa.Date(), nullable=True),
    sa.Column('school_id', sa.Uuid(), nullable=False),
    sa.Column('device_serial', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('device_model_id', sa.Uuid(), nullable=False),
    sa.Column('has_protective_case', sa.Boolean(), nullable=False),
    sa.Column('is_sla_breached', sa.Boolean(), nullable=False),
    sa.Column('inbound_collection_id', sa.Uuid(), nullable=True),
    sa.Column('outbound_collection_id', sa.Uuid(), nullable=True),
    sa.Column('inbound_date', sa.Date(), nullable=True),
    sa.Column('outbound_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['device_model_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['inbound_collection_id'], ['collections.id'], ),
    sa.ForeignKeyConstraint(['outbound_collection_id'], ['collections.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notes',
    sa.Column('creator_id', sa.Uuid(), nullable=False),
    sa.Column('repair_id', sa.Uuid(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['repair_id'], ['repairs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notes')
    op.drop_table('repairs')
    op.drop_table('schools')
    op.drop_table('devices')
    op.drop_table('collections')
    # ### end Alembic commands ###
